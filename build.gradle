plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	jcenter()
	maven {
		url = "https://jitpack.io/"
		content {
			includeGroup("com.github.MinnDevelopment")
		}
	}
	maven {
		url = "https://api.modrinth.com/maven"

	}

	// Maven for ModMenu
	maven { url "https://maven.terraformersmc.com/releases/" }

}

loom {
    splitEnvironmentSourceSets()

	mods {
		"phases-discord-rich-presence" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//implementation 'com.github.MinnDevelopment:java-discord-rpc:v2.0.2'
	//implementation 'club.minnced:discord-rpc-release:v3.4.0'
	include(implementation ('club.minnced:discord-rpc-release:v3.4.0'))
	include(implementation("com.github.MinnDevelopment:java-discord-rpc:v2.0.2"))

	//include(implementation('com.jagrosh:DiscordIPC:LATEST'))

	//modImplementation include ("maven.modrinth:midnightlib:${project.midnightlib_version}")
	include(modImplementation("maven.modrinth:midnightlib:${project.midnightlib_version}"))

	// ModMenu is optional, but it's a nice to have for quality of life.
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}